knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(getActiveDocumentContext()$path))
library(readxl)
library(rstudioapi)
library(parsedate)
library(lubridate)
library(psych)
install.packages("psych")
library(psych)
library(readxl)
library(rstudioapi)
library(parsedate)
library(lubridate)
library(psych)
library(corrplot)
library(outliers)
install.packages("outliers")
library(readxl)
library(rstudioapi)
library(parsedate)
library(lubridate)
library(psych)
library(corrplot)
library(outliers)
library(tidyverse)
setwd(dirname(getActiveDocumentContext()$path))
getwd()
?head
setwd(dirname(getActiveDocumentContext()$path))
SD <- read.csv("SD.csv")
SD <- SD[,-1]
head(SD)
head(SD, 10)
head(SD)
## Numeric EDA ##
```{r}
SD$HourlyDryBulbTemperature <- as.numeric(as.character(SD$HourlyDryBulbTemperature))
SD$HourlyDewPointTemperature <- as.numeric(as.character(SD$HourlyDewPointTemperature))
SD$HourlyPrecipitation <- as.numeric(as.character(SD$HourlyPrecipitation))
num <- SD %>% dplyr::select(where(is.numeric))
describe(num)
summary(num)
```
Some columns are almost entirely NA values, for sake of early EDA, we will be dropping these columns for now.
```{r}
drop <- c("HourlyWindGustSpeed","HourlyPressureTendency", "HourlyPressureChange", "HourlySeaLevelPressure", "HourlyPrecipitation", "HourlyPrecipitation", "HourlyDewPointTemperature")
num = num[,!(names(num) %in% drop)]
summary(num)
```
Our remaining NA's will be replaced with the median of its column.
```{r}
num_fill <- num %>% mutate(across(where(is.numeric), ~replace_na(., median(., na.rm=TRUE))))
summary(num_fill)
```
str(SD)
describe(SD)
str(SD)
describe(SD)
setwd(dirname(getActiveDocumentContext()$path))
SD <- read.csv("SD.csv")
SD <- SD[,-1]
SD <- SD %>% select(Date, SDGE, starts_with("Hourly"))
head(SD)
str(SD)
describe(SD)
SD$HourlyDryBulbTemperature <- as.numeric(as.character(SD$HourlyDryBulbTemperature))
SD$HourlyDewPointTemperature <- as.numeric(as.character(SD$HourlyDewPointTemperature))
SD$HourlyPrecipitation <- as.numeric(as.character(SD$HourlyPrecipitation))
num <- SD %>% dplyr::select(where(is.numeric))
describe(num)
summary(num)
drop <- c("HourlyWindGustSpeed","HourlyPressureTendency", "HourlyPressureChange", "HourlySeaLevelPressure", "HourlyPrecipitation", "HourlyPrecipitation", "HourlyDewPointTemperature")
num = num[,!(names(num) %in% drop)]
summary(num)
num_fill <- num %>% mutate(across(where(is.numeric), ~replace_na(., median(., na.rm=TRUE))))
summary(num_fill)
tests = lapply(num_fill, grubbs.test)
tests
M = cor(num_fill)
corrplot(M, addCoef.col = 'black')
drop2 <- c("HourlyWetBulbTemperature","HourlyAltimeterSetting")
num_fill2 = num_fill[,!(names(num_fill) %in% drop2)]
M2 = cor(num_fill2)
corrplot(M2, addCoef.col = 'black')
ggplot(data = num_fill2, aes(x= HourlyDryBulbTemperature, y=SDGE)) +
geom_point() +
labs(title="SDGE Usage By Temp",
x="Dry Bulb Temp (Â°F)", y = "Hourly Energy Use (MWh)")
#visualizing missing values
missing.values <- SD %>%
gather(key = "key", value = "val") %>%
mutate(is.missing = is.na(val)) %>%
group_by(key, is.missing) %>%
summarise(num.missing = n()) %>%
filter(is.missing==T) %>%
select(-is.missing) %>%
arrange(desc(num.missing))
missing.values %>%
ggplot() +
geom_bar(aes(x=key, y=num.missing), stat = 'identity') +
labs(x='variable', y="number of missing values", title='Number of missing values') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
